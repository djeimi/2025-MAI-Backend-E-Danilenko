services:
  app:
    env_file: .env
    container_name: crochet_container
    build: ./crochetProject
    restart: always
    depends_on:
      db:
        condition: service_healthy
      centrifugo:
        condition: service_healthy  
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://127.0.0.1:8000/"
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 2
    networks:
      - backend
    volumes:
      - static:/wholeProject/static
  nginx:
    image: nginx
    container_name: nginx_container
    restart: always
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    networks:
      - backend
    env_file: .env
    volumes:
      - static:/static
      - ./nginx/nginx.config:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 80:80
  db:
    image: postgres
    container_name: db_container
    restart: always
    user: postgres
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s 
      retries: 10
    networks:
      - backend
  centrifugo:
    image: centrifugo/centrifugo
    container_name: centrifugo_container
    restart: always
    env_file: .env
    networks:
      - backend
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"
      start_period: 10s
      interval: 60s
      timeout: 10s
      retries: 10
    volumes:
      - ./centrifugo/config.json:/centrifugo/config.json:ro
    command: centrifugo -c config.json
    ulimits:
      nofile:
        soft: 65535
        hard: 65535



volumes:
  pgdata:
  static:

networks:
  backend: